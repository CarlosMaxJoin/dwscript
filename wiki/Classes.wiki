#summary DWScript Classes

== Classes ==

Classes all derive from the root TObject class and follow the classic Delphi syntax. They're reference types, see also [Records].

Named constructors are supported, as well as class methods, meta-classes, virtual methods, properties and destructors. Properties can optionally be array properties, and can feature an explicit index.

Visibilities are private, protected, public and published.
* script mode (or main program), private & protected are understood as strict private and strict protected
* in build mode (in units), private & protected are understood in the classic fashion (implementations in the unit have access to private/protected members)

Classes can implement [Interfaces]n they can be partial.

You can also declare class methods with "method" as in the Oxygene language, in addition to "procedure" and "function".

Additionally classes can be marked as "external", in which case they're meant to expose classes that are not implemented in the script, and unlike interfaces, then can defined fields.