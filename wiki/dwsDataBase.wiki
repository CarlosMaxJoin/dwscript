#summary dwsDataBase module

= Introduction =

This module exposes simple classes that allow to connect and run query against various databases.

  * [DataBase]
  * [DataSet]
  * [DataField]

= Sample =

Connect to a local SQLite database and print two fields from a table

{{{
var db := DataBase.Create('SQLite', 'd:\db\base.sql3');
var query := db.Query('select field1, field2 from mytable where field3=?', ['filter']);
while not query.EOF do begin
   PrintLn(query.AsString(0)+', '+query.AsString(1));
   query.Next;
end;
}}}

Delete everything from mytable and insert in a transaction

{{{
db.BeginTransaction;
db.Exec('delete from mytable');
db.Exec('insert into mytable (field1, field3) values (?, ?)', ['hello', 'world']);
db.Commit.
}}}

Datasets and databases are automatically closed, but you can use the *Close* destructor to force-close at any time.

Transactions that not manually committed are automatically rollbacked.

= Details =

Currently supported database drivers:

  * [http://synopse.info/ Synopse] / [http://synopse.info/fossil/wiki?name=SQLite3+Framework mORMot]
    * SQLite 3 (native)
    * ODBC (native)
    * Oracle (native)
    * OleDB
      * Oracle via OleDB
      * MSOracle
      * MSSQL
      * MySQL
      * Jet (Access)
      * AS400
      * ODBC via OleDB